{"/Users/mmcelwee/repos/automata-store-api/src/utils/payloadIsValid.ts":{"path":"/Users/mmcelwee/repos/automata-store-api/src/utils/payloadIsValid.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":8,"column":5}},"2":{"start":{"line":3,"column":38},"end":{"line":8,"column":3}},"3":{"start":{"line":9,"column":21},"end":{"line":23,"column":1}},"4":{"start":{"line":10,"column":21},"end":{"line":10,"column":44}},"5":{"start":{"line":11,"column":17},"end":{"line":18,"column":10}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":25}},"7":{"start":{"line":13,"column":24},"end":{"line":13,"column":92}},"8":{"start":{"line":13,"column":71},"end":{"line":13,"column":90}},"9":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":146}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":19}},"12":{"start":{"line":19,"column":4},"end":{"line":22,"column":6}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":18},"end":{"line":3,"column":19}},"loc":{"start":{"line":3,"column":36},"end":{"line":8,"column":5}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":48},"end":{"line":23,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":62},"end":{"line":18,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":54},"end":{"line":13,"column":55}},"loc":{"start":{"line":13,"column":69},"end":{"line":13,"column":92}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":24},"end":{"line":13,"column":92}},"type":"cond-expr","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},{"start":{"line":13,"column":54},"end":{"line":13,"column":92}}],"line":13},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14}},"s":{"0":1,"1":1,"2":2,"3":1,"4":5,"5":5,"6":4,"7":4,"8":2,"9":4,"10":2,"11":4,"12":5,"13":1},"f":{"0":2,"1":5,"2":4,"3":2},"b":{"0":[2,2],"1":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/mmcelwee/repos/automata-store-api/src/utils/payloadIsValid.ts","sources":["/Users/mmcelwee/repos/automata-store-api/src/utils/payloadIsValid.ts"],"names":[],"mappings":";;AAOA,IAAM,WAAW,GAAG,UAAC,MAAc,IAAK,OAAA,CAAC;IACvC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,iBAAiB;IACvB,KAAK,EAAE,oCAAoC;IAC3C,MAAM,QAAA;CACP,CAAC,EALsC,CAKtC,CAAC;AAEH,IAAM,cAAc,GAAG,UAAI,OAAuB,EAAE,MAAuB;IACjE,IAAA,UAAU,GAAK,OAAO,CAAC,IAAI,WAAjB,CAAkB;IAEpC,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC;QAC/C,IAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,CAAC,GAAG,KAAK,CAAC,EAAX,CAAW,CAAC;QAErE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7B,GAAG,CAAC,IAAI,CACN,WAAW,CACT,+BAAuB,CAAC,4EAAiE,CAAC,CAAE,CAC7F,CACF,CAAC;SACH;QAED,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;QACL,OAAO,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;QAC5B,MAAM,QAAA;KACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC","sourcesContent":["import { APIError, JsonApiBody, ValidatorSchema } from '../types';\n\ntype Response = {\n  isValid: boolean;\n  errors: APIError[];\n};\n\nconst createError = (detail: string) => ({\n  status: 400,\n  code: 'AttributesError',\n  title: 'Missing attribute or invalid value',\n  detail,\n});\n\nconst payloadIsValid = <T>(payload: JsonApiBody<T>, schema: ValidatorSchema): Response => {\n  const { attributes } = payload.data;\n\n  const errors = Object.keys(schema).reduce((acc, k) => {\n    const v = schema[k];\n    const validator = typeof v === 'function' ? v : (val) => !!val === v;\n\n    if (!validator(attributes[k])) {\n      acc.push(\n        createError(\n          `Required attribute \"${k}\" was not supplied or had an invalid value at data.attributes.${k}`,\n        ),\n      );\n    }\n\n    return acc;\n  }, []);\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};\n\nexport default payloadIsValid;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f6c8a63609cae9398fc38f0940abc141d690e653","contentHash":"de4e99927ba2e6404dcbb93c1431ddb1e16bb7d05b12b46d748cecde535287db"}}